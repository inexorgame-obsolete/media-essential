// fps specific cfg stuff goes here

togglezoom = [ zoom (if (= $zoom 1) -1 1) ]
sayteamcommand = [inputcommand (if (>= $numargs 1) [result $arg1] [result ""]) [sayteam $commandbuf] "[team]"]

mapcomplete = [ complete $arg1 $mapdir ogz ]
mapcomplete map

modenames = "ffa coop teamplay insta instateam effic efficteam tac tacteam capture regencapture ctf instactf protect instaprotect hold instahold efficctf efficprotect effichold collect instacollect efficcollect bomberman bombermanteam hideandseek"
loop i (listlen $modenames) [
    mname = (at $modenames $i)
    alias $mname [ if (mode (+ @i 1)) [if (> $numargs 0) [map $arg1] [map]] ]
    mapcomplete $mname
]

demo = [ stopdemo; if (mode 0) [if (> $numargs 0) [map $arg1] [map]] ]
complete demo . dmo

speditlock = 1
allowspedit = [ speditlock = 0; onrelease [speditlock = 1] ]

allowedittoggle = [
    if (&& (m_sp (getmode)) $speditlock) [
        error "you must hold" (prettylist (searchbinds "allowspedit") "or") "to toggle editing in single player modes"
        result 0
    ] [
        result 1
    ]
]

// autocomplete for prefabs
complete pasteprefab $prefabdir obr
complete delprefab $prefabdir obr // TODO delprefab only deleting reference of the prefab at the moment instead of actually deleting the obr file in prefabdir

// Todo: Don't hardcode (neither C++ nor CS) playermodels at all, switch to JSON and loop over the playermodel directory; an experiment didn't work out because of the hardcoded parts in the C++ code.

playermodels = [mrfixit2 ironsnoutx10k];
playermodelnum = (listlen $playermodels)

looplist playermodelsrc $playermodels [
	exec (concatword "model/player/" $playermodelsrc "/" $playermodelsrc ".cfg");
]

get_playermodel_name = [
	if (&& (> $numargs 0) (!=s $arg1 "")) [result (at $playermodels $arg1)] [result (at $playermodels $playermodel)]
]


playermodelicon = [get_playermodel_name $arg1]
playermodelname = [getalias (concatword (get_playermodel_name $arg1) "_name")]
playermodelstory = [getalias (concatword (get_playermodel_name $arg1) "_story" )]


defaultSongs = ["clearside/assimilator.ogg" "clearside/siste_viator.ogg" "caffeine/01 - DOCTOR VOX - Hero.ogg" "caffeine/02 - daPlaque - Dream.ogg" "caffeine/03 - Romos - Helios.ogg" "caffeine/04 - VOIA - Mochi Moshi feat. Keii.ogg" "caffeine/06 - Digital Math - Infinite Cosmos.ogg" "caffeine/08 - From The Dust - Stardust.ogg"]

introSongs = ["kevin_macleod/the_complex.ogg"]

output_song = [ 
  if (&& (!= $musicvol 0) (!= $soundvol 0)) [ 
    // Don't output that music is getting played, when it's muted
    echo (concatword "^f6[music] ^f7Now playing:^f0 " $nextSong); 
  ] 
]

playasong = [ playsIntroSong = 0; nextSong = (at $defaultSongs (rnd (- (listlen $defaultSongs) 1))); output_song; music $nextSong playasong ]

play_intro_song = [ playsIntroSong = 1; nextSong = (at $introSongs (rnd (- (listlen $introSongs) 1))); output_song; music $nextSong play_intro_song ]

play_intro_song
